apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'jacoco'
apply plugin: 'application'
sourceCompatibility = 1.8
version = '1.0'

mainClassName = "netflix.karyon.KaryonRunner"

allprojects {
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
}

jacoco {
    toolVersion = "0.7.1.201405082137"
    reportsDir = file("$buildDir/reports/jacoco")
}

jar {
    manifest {
        attributes 'Implementation-Title': 'Gradle Quickstart', 'Implementation-Version': version
        attributes 'Main-Class': 'netflix.karyon.KaryonRunner'
    }
}

repositories {
    mavenCentral()
}

dependencies {
  
    compile 'com.scmspain.karyon:karyon-rest-router:1.0'
    compile 'io.reactivex:rxjava:1.0.+'
    compile 'com.google.inject:guice:3.0'
    compile 'com.google.code.gson:gson:2.3.+'
    compile group: 'commons-collections', name: 'commons-collections', version: '3.2'
    compile 'com.netflix.karyon:karyon2-core:2.5.1'
    compile 'com.netflix.karyon:karyon2-admin-web:2.5.1'
    compile 'com.netflix.karyon:karyon2-eureka:2.5.1'
    compile 'com.netflix.karyon:karyon2-archaius:2.5.1'
    compile 'com.netflix.karyon:karyon2-servo:2.5.1'
    compile 'com.netflix.blitz4j:blitz4j:1.21'
    compile 'org.slf4j:slf4j-api:1.7.0'
    runtime 'org.slf4j:slf4j-simple:1.7.0'

    testCompile 'org.powermock:powermock-api-mockito:1.6.2'
    testCompile 'org.powermock:powermock-module-junit4:1.6.2'
    testCompile "org.mockito:mockito-all:1.9.5"
    testCompile group: 'junit', name: 'junit', version: '4.11'
}

installApp {
    destinationDir = file('build/install/'+'karyon_workshop_ms2')
}

startScripts {
    applicationName = 'karyon_workshop_ms2'
}


task runApp (dependsOn: [classes], type: JavaExec) {

    group = "Run the microservice"
    description = "Run the api listening on port XX"

    main = mainClassName
    classpath = sourceSets.main.runtimeClasspath
    def deployEnvironment = 'dev'
    systemProperty 'java.awt.headless', 'true'
    systemProperty 'archaius.deployment.environment', deployEnvironment
    systemProperty 'archaius.deployment.applicationId', 'App'

    args = ["com.scmspain.workshop.core.AppServer"]
}

task killGradleInstances(type: Exec) {
    commandLine './killGradle.sh'
}
